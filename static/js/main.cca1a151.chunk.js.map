{"version":3,"sources":["components/Footer.js","simulations/RenderLoop.js","simulations/RingBuffer.js","simulations/Plotter.js","simulations/ShowerSim.js","components/ShowerControl.js","components/ShowerMixer.js","App.js","serviceWorker.js","index.js"],"names":["Footer","style","textAlign","href","startRender","canvas","item","undefined","getContext","vendors","x","length","window","requestAnimationFrame","cancelAnimationFrame","vendorCheck","cx","lastTime","Date","getTime","currentTime","dt","fixedDeltaCounter","fixedCount","simulation","init","simulationLoop","Math","min","fixedUpdate","update","render","RingBuffer","size","this","buffer","nextIndex","value","index","ret","i","push","Plotter","width","height","maxVals","top","bottom","targetTop","targetBottom","stepLength","verticalStep","y","data","strokeStyle","lineWidth","beginPath","count","x0","y0","moveTo","lineTo","stroke","BeerGameSimulation","delayQueue","delaySeconds","running","targetTemperature","minTemperature","maxTemperature","maxChangeSpeed","reset","currentTemperature","random","mixerTemperature","put","graphList","plotter","mixerValue","console","log","diff","abs","sign","nextTempValue","getTail","_","clearRect","draw","getAll","filter","el","showerSim","ShowerControl","step","max","onChange","suffix","marginTop","marginLeft","marginRight","marginBottom","axis","ystep","ymin","ymax","styles","track","backgroundColor","active","ShowerMixer","props","useState","mixer","shower","setShower","canvasElement","useRef","useEffect","location","search","current","setMixer","border","ref","paddingLeft","paddingRight","display","verticalAlign","newShower","changeShower","App","maxWidth","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cca1a151.chunk.js","sourcesContent":["import React from 'react'\n\nconst Footer = () => {\n\n    const style = {\n        textAlign: 'right'\n    }\n\n    return <div style={style}>\n        <p>Copyright (c) Jussi Enroos 2019<br />\n        <a href='https://github.com/McDevon/shower-mixer'>Source</a> with MIT license</p>\n    </div>\n}\n\nexport default Footer","const vendorCheck = () => {\n    const vendors = ['webkit', 'moz'];\n    for (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n            window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n}\n\nconst startRender = (canvas, item) => {\n    if (typeof (canvas.getContext) === undefined) {\n        return\n    }\n\n    vendorCheck()\n\n    let cx = canvas.getContext('2d'),\n        lastTime = (new Date()).getTime(),\n        currentTime = 0,\n        dt = 0,\n        fixedDeltaCounter = 0,\n        fixedCount = 0\n    \n    const maxLoops = 1,\n        fixedDelta = 1.0/60\n    \n    canvas.simulation = item\n    item.init(canvas)\n\n    const simulationLoop = () => {\n        window.requestAnimationFrame(simulationLoop)\n\n        currentTime = (new Date()).getTime()\n        dt = Math.min((currentTime - lastTime) / 1000, 0.03)\n\n        fixedDeltaCounter += dt\t\t\n        fixedCount = 0\n\t\t\n\t\tif (fixedDeltaCounter < fixedDelta) {\n\t\t\tfixedDeltaCounter = fixedDelta\n\t\t}\n\t\t\n\t\twhile (fixedDeltaCounter >= fixedDelta && fixedCount < maxLoops) {\n\t\t\titem.fixedUpdate(fixedDelta)\n\t\t\tfixedDeltaCounter -= fixedDelta\n\t\t\tfixedCount++\n\t\t}\n\t\t\n\t\tif (fixedCount >= maxLoops) {\n\t\t\tfixedDeltaCounter = 0\n\t\t}\n\n        item.update(dt)\n\n        item.render(cx)\n\n        lastTime = currentTime\n    }\n\n    simulationLoop()\n}\n\nexport default startRender","class RingBuffer {\n    constructor(size) {\n        this.size = size\n        this.buffer = []\n        this.buffer.length = size\n        this.nextIndex = 0\n    }\n\n    put(value) {\n        this.buffer[this.nextIndex] = value\n        this.nextIndex = (this.nextIndex + 1) % this.size\n    }\n\n    getHead() {\n        return this.buffer[(this.nextIndex - 1) % this.size]\n    }\n\n    getTail() {\n        return this.buffer[this.nextIndex]\n    }\n\n    getAll() {\n        let index = this.nextIndex\n        let ret = []\n        for (let i = 0; i < this.size; i++) {\n            ret.push(this.buffer[index])\n            index = (index + 1) % this.size\n        }\n        return ret\n    }\n\n}\n\nexport default RingBuffer","\nclass Plotter {\n\n    constructor(width, height, maxVals, top, bottom, canvas, targetTop, targetBottom) {\n        this.width = width\n        this.height = height\n        this.maxVals = maxVals\n        this.top = top\n        this.bottom = bottom\n        this.targetTop = targetTop\n        this.targetBottom = targetBottom\n        this.stepLength = width / maxVals\n        this.verticalStep = height / (top - bottom)\n        this.cx = canvas.getContext('2d')\n\n    }\n\n    draw(x, y, data) {\n        \n        this.cx.strokeStyle = '#FFAA00'\n        this.cx.lineWidth = 2\n        this.cx.beginPath()\n        for (let i = 0, count = data.length; i < count; i++) {\n            const value = data[i]\n            const x0 = x + this.stepLength * i\n            const y0 = y + this.height - (this.verticalStep * (value - this.bottom))\n            if (i === 0) {\n                this.cx.moveTo(x0, y0)\n            } else {\n                this.cx.lineTo(x0, y0)\n            }\n        }\n        this.cx.stroke()\n\n        this.cx.strokeStyle = '#000000'\n        this.cx.lineWidth = 1\n        this.cx.beginPath()\n        this.cx.moveTo(x, y)\n        this.cx.lineTo(x, y + this.height)\n        this.cx.stroke()\n        this.cx.strokeStyle = '#777777'\n        this.cx.beginPath()\n        this.cx.moveTo(x, y + this.height - (this.verticalStep * (this.targetTop - this.bottom)))\n        this.cx.lineTo(x + this.width, y + this.height - (this.verticalStep * (this.targetTop - this.bottom)))\n        this.cx.moveTo(x, y + this.height - (this.verticalStep * (this.targetBottom - this.bottom)))\n        this.cx.lineTo(x + this.width, y + this.height - (this.verticalStep * (this.targetBottom - this.bottom)))\n        this.cx.stroke()\n    }\n}\n\nexport default Plotter","import RingBuffer from \"../simulations/RingBuffer\";\nimport Plotter from \"./Plotter\";\n\nclass BeerGameSimulation {\n\n    init(canvas) {\n        this.canvas = canvas\n\n        this.width = canvas.width\n        this.height = canvas.height\n\n        const delaySeconds = 5\n\n        this.delayQueue = new RingBuffer(delaySeconds * 60)\n        this.running = true\n\n        this.targetTemperature = 36\n        this.minTemperature = 15\n        this.maxTemperature = 50\n        this.maxChangeSpeed = 3\n\n        this.reset()\n    }\n\n    reset() {\n        this.currentTemperature = 17 + Math.random() * 6\n        this.mixerTemperature = this.currentTemperature\n\n        for (let i = 0; i < this.delayQueue.size; i++) {\n            this.delayQueue.put(this.currentTemperature)\n        }\n\n        const graphLen = 30 * 60\n        this.graphList = new RingBuffer(graphLen)\n\n        this.plotter = new Plotter(\n            550, 350,\n            graphLen,\n            this.maxTemperature,\n            this.minTemperature,\n            this.canvas,\n            this.targetTemperature + 0.5,\n            this.targetTemperature - 0.5\n        )\n\n        return this.mixerTemperature\n    }\n\n    setMixer(mixerValue) {\n        this.mixerTemperature = this.minTemperature + (this.maxTemperature - this.minTemperature) * (1 - mixerValue)\n        console.log(`Target ${this.mixerTemperature}`)\n    }\n\n    fixedUpdate(dt) {\n        let diff = (this.mixerTemperature - this.currentTemperature)\n        if (Math.abs(diff) > this.maxChangeSpeed * dt) {\n            diff = this.maxChangeSpeed * Math.sign(diff) * dt\n        }\n\n        this.currentTemperature += diff\n\n        const nextTempValue = this.delayQueue.getTail()\n        this.delayQueue.put(this.currentTemperature)\n        this.graphList.put(nextTempValue)\n    }\n\n    update(_) { }\n\n    render(_) {\n        const context = this.canvas.getContext('2d')\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\n        this.plotter.draw(25, 25, this.graphList.getAll().filter(function (el) {\n            return el != null;\n        }))\n    }\n}\n\nconst showerSim = () => {\n    return new BeerGameSimulation()\n}\n\nexport default showerSim","import React from 'react'\nimport Slider from 'react-input-slider'\n\nconst ShowerControl = ({ value, step, min, max, onChange, suffix='' }) => {\n    const divStyle = {\n        marginTop: '5px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        marginBottom: '5px'\n    }\n    console.log(`Mixer value ${value}`)\n    return <div style={divStyle}>\n        <Slider\n            axis=\"y\"\n            ystep={step}\n            ymin={min}\n            ymax={max}\n            y={value}\n            onChange={onChange()}\n            styles={{\n                track: {\n                  backgroundColor: 'red',\n                  height: 300\n                },\n                active: {\n                  backgroundColor: 'blue'\n                }\n              }}\n        />\n    </div>\n}\n\nexport default ShowerControl","import React, { useState, useEffect, useRef } from 'react'\nimport startRender from '../simulations/RenderLoop'\nimport showerSim from '../simulations/ShowerSim'\nimport ShowerControl from './ShowerControl';\n\nconst ShowerMixer = props => {\n    const [shower, setShower] = useState({\n        mixer: 0.9\n    })\n\n    const canvasElement = useRef(null)\n\n    const controlAreaStyle = {\n        paddingLeft: '25px',\n        paddingRight: '25px',\n    }\n    const canvasStyle = {\n        border: ' 1px solid #aaa',\n    }\n    const columnStyle = {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '200px',\n        marginLeft: '5px',\n        marginRight: '5px'\n    }\n\n    const changeShower = ({ mixer }) => {\n        const newShower = {\n            mixer: mixer\n        }\n        setShower(newShower)\n        canvasElement.current.simulation.setMixer(newShower.mixer)\n    }\n\n    const startHook = () => {\n        console.log('start hook')\n        console.log(props.location.search)\n\n        startRender(canvasElement.current, showerSim())\n\n        canvasElement.current.simulation.setMixer(shower.mixer)\n    }\n\n    useEffect(startHook, [])\n\n    return <div>\n        <canvas style={canvasStyle} ref={canvasElement} width=\"600\" height=\"400\" />\n        <div style={controlAreaStyle}>\n            <div style={columnStyle}>\n                <ShowerControl\n                    value={shower.mixer}\n                    min={0} max={1} step={0.0025}\n                    onChange={() => ({ y }) => changeShower({ ...shower, mixer: y })}\n                />\n            </div>\n        </div>\n    </div>\n}\n\nexport default ShowerMixer","import React, { useEffect } from 'react'\nimport Footer from './components/Footer'\nimport ShowerMixer from './components/ShowerMixer';\n\nconst App = props => {\n  const divStyle = {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: '600px'\n  }\n\n  useEffect(() => {\n    console.log('app effect')\n  })\n\n  return (\n    <div style={divStyle}>\n        <ShowerMixer location={window.location} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}