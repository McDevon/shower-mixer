{"version":3,"sources":["components/Footer.js","simulations/RenderLoop.js","simulations/RingBuffer.js","simulations/Plotter.js","simulations/ShowerSim.js","components/ShowerControl.js","components/ShowerMixer.js","App.js","serviceWorker.js","index.js"],"names":["Footer","style","textAlign","href","startRender","canvas","item","undefined","getContext","vendors","x","length","window","requestAnimationFrame","cancelAnimationFrame","vendorCheck","cx","lastTime","Date","getTime","currentTime","dt","fixedDeltaCounter","fixedCount","simulation","init","simulationLoop","Math","min","fixedUpdate","update","render","RingBuffer","size","this","buffer","nextIndex","value","index","ret","i","push","Plotter","maxVals","top","bottom","targetTop","targetBottom","margin","width","height","stepLength","verticalStep","data","x0","pixel","y0","x1","y1","strokeStyle","lineWidth","beginPath","count","xd","yd","moveTo","lineTo","stroke","fillStyle","fill","round","BeerGameSimulation","delayQueue","delaySeconds","running","targetTemperature","minTemperature","maxTemperature","maxChangeSpeed","maxDeltaSpeed","lastDiff","reset","controlMinTemperature","random","controlMaxTemperature","currentTemperature","mixerTemperature","put","graphList","plotter","mixerValue","console","log","distance","diff","slowDist","abs","mul","sign","nextTempValue","getTail","_","clearRect","draw","getAll","filter","el","showerSim","ShowerControl","step","max","onChange","suffix","marginTop","marginLeft","marginRight","marginBottom","axis","ystep","ymin","ymax","y","styles","track","backgroundColor","active","ShowerMixer","props","useState","mixer","shower","setShower","canvasElement","useRef","useEffect","location","search","current","showerVal","paddingLeft","paddingRight","paddingTop","ref","display","verticalAlign","newShower","setMixer","changeShower","App","maxWidth","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2NAceA,G,MAZA,WAMX,OAAO,yBAAKC,MAJE,CACVC,UAAW,UAIX,6DAAkC,6BAClC,uBAAGC,KAAK,2CAAR,UADA,wB,eCqDOC,EArDK,SAACC,EAAQC,GACzB,QAAmCC,WAAvBF,EAAOG,WAAnB,EAVgB,WAEhB,IADA,IAAMC,EAAU,CAAC,SAAU,OAClBC,EAAI,EAAGA,EAAID,EAAQE,SAAWC,OAAOC,wBAAyBH,EACnEE,OAAOC,sBAAwBD,OAAOH,EAAQC,GAAK,yBACnDE,OAAOE,qBACHF,OAAOH,EAAQC,GAAK,yBAA2BE,OAAOH,EAAQC,GAAK,+BAS3EK,GAEA,IAAIC,EAAKX,EAAOG,WAAW,MACvBS,GAAY,IAAIC,MAAQC,UACxBC,EAAc,EACdC,EAAK,EACLC,EAAoB,EACpBC,EAAa,EAKjBlB,EAAOmB,WAAalB,EACpBA,EAAKmB,KAAKpB,IAEa,SAAjBqB,IAaR,IAZMd,OAAOC,sBAAsBa,GAE7BN,GAAe,IAAIF,MAAQC,UAC3BE,EAAKM,KAAKC,KAAKR,EAAcH,GAAY,IAAM,KAG/CM,EAAa,GADbD,GAAqBD,GAXR,EAAI,KAetBC,EAfkB,EAAI,IAkBhBA,GAlBY,EAAI,IAkBmBC,EAnBvB,GAoBlBjB,EAAKuB,YAnBa,EAAI,IAoBtBP,GApBkB,EAAI,GAqBtBC,IAGGA,GAzBe,IA0BlBD,EAAoB,GAGfhB,EAAKwB,OAAOT,GAEZf,EAAKyB,OAAOf,GAEZC,EAAWG,EAGfM,K,cC1BWM,E,WAhCX,WAAYC,GAAO,oBACfC,KAAKD,KAAOA,EACZC,KAAKC,OAAS,GACdD,KAAKC,OAAOxB,OAASsB,EACrBC,KAAKE,UAAY,E,gDAGjBC,GACAH,KAAKC,OAAOD,KAAKE,WAAaC,EAC9BH,KAAKE,WAAaF,KAAKE,UAAY,GAAKF,KAAKD,O,gCAI7C,OAAOC,KAAKC,QAAQD,KAAKE,UAAY,GAAKF,KAAKD,Q,gCAI/C,OAAOC,KAAKC,OAAOD,KAAKE,a,+BAMxB,IAFA,IAAIE,EAAQJ,KAAKE,UACbG,EAAM,GACDC,EAAI,EAAGA,EAAIN,KAAKD,KAAMO,IAC3BD,EAAIE,KAAKP,KAAKC,OAAOG,IACrBA,GAASA,EAAQ,GAAKJ,KAAKD,KAE/B,OAAOM,M,KCgDAG,E,WAzEX,WAAYC,EAASC,EAAKC,EAAQxC,EAAQyC,EAAWC,GAAe,oBAChEb,KAAKc,OAAS,EACdd,KAAKe,MAAQ5C,EAAO4C,MAAsB,EAAdf,KAAKc,OACjCd,KAAKgB,OAAS7C,EAAO6C,OAAuB,EAAdhB,KAAKc,OACnCd,KAAKS,QAAUA,EACfT,KAAKU,IAAMA,EACXV,KAAKW,OAASA,EACdX,KAAKY,UAAYA,EACjBZ,KAAKa,aAAeA,EACpBb,KAAKiB,WAAajB,KAAKe,MAAQN,EAC/BT,KAAKkB,aAAelB,KAAKgB,QAAUN,EAAMC,GACzCX,KAAKlB,GAAKX,EAAOG,WAAW,M,iDAI3B6C,GAED,IAAMC,EAAKpB,KAAKqB,MAAMrB,KAAKc,QAASQ,EAAKtB,KAAKqB,MAAMrB,KAAKc,QACnDS,EAAKvB,KAAKqB,MAAMD,EAAKpB,KAAKe,MAAsB,EAAdf,KAAKc,QAAaU,EAAKxB,KAAKqB,MAAMC,EAAKtB,KAAKgB,OAAuB,EAAdhB,KAAKc,QAElGd,KAAKlB,GAAG2C,YAAc,UACtBzB,KAAKlB,GAAG4C,UAAY,EACpB1B,KAAKlB,GAAG6C,YACR,IAAK,IAAIrB,EAAI,EAAGsB,EAAQT,EAAK1C,OAAQ6B,EAAIsB,EAAOtB,IAAK,CACjD,IAAMH,EAAQgB,EAAKb,GACbuB,EAAKT,EAAKpB,KAAKiB,WAAaX,EAC5BwB,EAAKR,EAAKtB,KAAKgB,OAAUhB,KAAKkB,cAAgBf,EAAQH,KAAKW,QACvD,IAANL,EACAN,KAAKlB,GAAGiD,OAAOF,EAAIC,GAEnB9B,KAAKlB,GAAGkD,OAAOH,EAAIC,GAG3B9B,KAAKlB,GAAGmD,SAERjC,KAAKlB,GAAG2C,YAAc,UACtBzB,KAAKlB,GAAGoD,UAAY,UACpBlC,KAAKlB,GAAG4C,UAAY,EAEpB1B,KAAKlB,GAAG6C,YACR3B,KAAKlB,GAAGiD,OAAOX,EAAIE,GACnBtB,KAAKlB,GAAGkD,OAAOZ,EAAII,GACnBxB,KAAKlB,GAAGmD,SACRjC,KAAKlB,GAAG6C,YACR3B,KAAKlB,GAAGiD,OAAOX,EAAIE,GACnBtB,KAAKlB,GAAGkD,OAAOZ,EAAK,EAAGE,EAAK,IAC5BtB,KAAKlB,GAAGkD,OAAOZ,EAAK,EAAGE,EAAK,IAC5BtB,KAAKlB,GAAGqD,OAERnC,KAAKlB,GAAG6C,YACR3B,KAAKlB,GAAGiD,OAAOX,EAAII,GACnBxB,KAAKlB,GAAGkD,OAAOT,EAAIC,GACnBxB,KAAKlB,GAAGmD,SACRjC,KAAKlB,GAAG6C,YACR3B,KAAKlB,GAAGiD,OAAOR,EAAIC,GACnBxB,KAAKlB,GAAGkD,OAAOT,EAAK,GAAIC,EAAK,GAC7BxB,KAAKlB,GAAGkD,OAAOT,EAAK,GAAIC,EAAK,GAC7BxB,KAAKlB,GAAGqD,OAERnC,KAAKlB,GAAG2C,YAAc,UACtBzB,KAAKlB,GAAG6C,YACR3B,KAAKlB,GAAGiD,OAAOX,EAAIpB,KAAKqB,MAAMC,EAAKtB,KAAKgB,OAAUhB,KAAKkB,cAAgBlB,KAAKY,UAAYZ,KAAKW,UAC7FX,KAAKlB,GAAGkD,OAAOT,EAAIvB,KAAKqB,MAAMC,EAAKtB,KAAKgB,OAAUhB,KAAKkB,cAAgBlB,KAAKY,UAAYZ,KAAKW,UAC7FX,KAAKlB,GAAGiD,OAAOX,EAAIpB,KAAKqB,MAAMC,EAAKtB,KAAKgB,OAAUhB,KAAKkB,cAAgBlB,KAAKa,aAAeb,KAAKW,UAChGX,KAAKlB,GAAGkD,OAAOT,EAAIvB,KAAKqB,MAAMC,EAAKtB,KAAKgB,OAAUhB,KAAKkB,cAAgBlB,KAAKa,aAAeb,KAAKW,UAChGX,KAAKlB,GAAGmD,W,4BAGN9B,GACF,OAAOV,KAAK2C,MAAMjC,GAAS,O,KCrE7BkC,E,6FAEGlE,GACD6B,KAAK7B,OAASA,EAEd6B,KAAKe,MAAQ5C,EAAO4C,MACpBf,KAAKgB,OAAS7C,EAAO6C,OAIrBhB,KAAKsC,WAAa,IAAIxC,EAAWyC,KACjCvC,KAAKwC,SAAU,EAEfxC,KAAKyC,kBAAoB,GACzBzC,KAAK0C,eAAiB,GACtB1C,KAAK2C,eAAiB,GACtB3C,KAAK4C,eAAiB,EAEtB5C,KAAK6C,cAAgB,IACrB7C,KAAK8C,SAAW,EAEhB9C,KAAK+C,U,8BAKL/C,KAAKgD,sBAAwBhD,KAAK0C,eAAiC,GAAhBjD,KAAKwD,SACxDjD,KAAKkD,sBAAwBlD,KAAK2C,eAAiC,GAAhBlD,KAAKwD,SACxDjD,KAAKmD,mBAAqBnD,KAAKgD,sBAAwC,EAAhBvD,KAAKwD,SAC5DjD,KAAKoD,iBAAmBpD,KAAKmD,mBAE7B,IAAK,IAAI7C,EAAI,EAAGA,EAAIN,KAAKsC,WAAWvC,KAAMO,IACtCN,KAAKsC,WAAWe,IAAIrD,KAAKmD,oBAiB7B,OAbAnD,KAAKsD,UAAY,IAAIxD,EADJ,MAGjBE,KAAKuD,QAAU,IAAI/C,EAHF,KAKbR,KAAK2C,eACL3C,KAAK0C,eACL1C,KAAK7B,OACL6B,KAAKyC,kBAAoB,GACzBzC,KAAKyC,kBAAoB,IAGV,GAAKzC,KAAKoD,iBAAmBpD,KAAKgD,wBAA0BhD,KAAKkD,sBAAwBlD,KAAKgD,yB,+BAK5GQ,GACLxD,KAAKoD,iBAAmBpD,KAAKgD,uBAAyBhD,KAAKkD,sBAAwBlD,KAAKgD,wBAA0B,EAAIQ,GACtHC,QAAQC,IAAR,iBAAsB1D,KAAKoD,qB,kCAGnBjE,GACR,IAAMwE,EAAY3D,KAAKoD,iBAAmBpD,KAAKmD,mBAC3CS,EAAOD,EACLE,EAAW7D,KAAK4C,gBAAkB5C,KAAK6C,cAAgB1D,GAC7D,GAAIM,KAAKqE,IAAIH,GAAYE,EAAU,CAC/B,IAAME,EAAMtE,KAAKqE,IAAIH,GAAY3D,KAAK6C,cACtCe,EAAOnE,KAAKuE,KAAKL,GAAYI,EAE7BtE,KAAKqE,IAAIF,GAAQ5D,KAAK4C,eAAiBzD,IACvCyE,EAAO5D,KAAK4C,eAAiBnD,KAAKuE,KAAKJ,GAAQzE,GAG/CM,KAAKqE,IAAIF,GAAQnE,KAAKqE,IAAI9D,KAAK8C,WAAarD,KAAKqE,IAAI9D,KAAK8C,SAAWc,GAAQ5D,KAAK6C,cAAgB1D,IAClGyE,EAAO5D,KAAK8C,SAAW9C,KAAK6C,cAAgB1D,EAAKM,KAAKuE,KAAKJ,IAG/D5D,KAAK8C,SAAWc,EAChB5D,KAAKmD,oBAAsBS,EAE3B,IAAMK,EAAgBjE,KAAKsC,WAAW4B,UACtClE,KAAKsC,WAAWe,IAAIrD,KAAKmD,oBACzBnD,KAAKsD,UAAUD,IAAIY,K,6BAGhBE,M,6BAEAA,GACanE,KAAK7B,OAAOG,WAAW,MAC/B8F,UAAU,EAAG,EAAGpE,KAAK7B,OAAO4C,MAAOf,KAAK7B,OAAO6C,QAEvDhB,KAAKuD,QAAQc,KAAKrE,KAAKsD,UAAUgB,SAASC,OAAO,SAAUC,GACvD,OAAa,MAANA,S,KASJC,EAJG,WACd,OAAO,IAAIpC,G,OCjEAqC,EA7BO,SAAC,GAAoD,IAAlDvE,EAAiD,EAAjDA,MAAOwE,EAA0C,EAA1CA,KAAMjF,EAAoC,EAApCA,IAAKkF,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,SAA0B,EAAhBC,OAQtD,OADArB,QAAQC,IAAR,sBAA2BvD,IACpB,yBAAKpC,MAPK,CACbgH,UAAW,MACXC,WAAY,MACZC,YAAa,MACbC,aAAc,QAId,kBAAC,IAAD,CACIC,KAAK,IACLC,MAAOT,EACPU,KAAM3F,EACN4F,KAAMV,EACNW,EAAGpF,EACH0E,SAAUA,IACVW,OAAQ,CACJC,MAAO,CACLC,gBAAiB,MACjB1E,OAAQ,KAEV2E,OAAQ,CACND,gBAAiB,a,4NCpBnC,IAiFeE,EAjFK,SAAAC,GAAU,IAAD,EACGC,mBAAS,CACjCC,MAAO,IAFc,mBAClBC,EADkB,KACVC,EADU,KAKnBC,EAAgBC,iBAAO,MAsD7B,OAFAC,oBATkB,WACd3C,QAAQC,IAAI,cACZD,QAAQC,IAAImC,EAAMQ,SAASC,QAE3BpI,EAAYgI,EAAcK,QAAS9B,KACnC,IAAM+B,EAAYN,EAAcK,QAAQjH,WAAWyD,QACnDkD,EAAU,CAAEF,MAAOS,KAGF,IAEd,6BACF,yBAAKzI,MArDa,CACnB0I,YAAa,OACbC,aAAc,SAoDV,4BAAK,sBACL,2BAAI,mIACJ,2BAAI,oKAER,4BAAQ3I,MAjCQ,CAChBiH,WAAY,MACZC,YAAa,MACbwB,YAAa,OACbC,aAAc,OACdC,WAAY,QA4BgBC,IAAKV,EAAenF,MAAM,MAAMC,OAAO,QACnE,yBAAKjD,MAvDgB,CACrB0I,YAAa,OACbC,aAAc,SAsDV,yBAAK3I,MApDO,CAChB8I,QAAS,eACTC,cAAe,MACf/F,MAAO,QACPiE,WAAY,MACZC,YAAa,QAgDL,6BACK,wBAEL,kBAAC,EAAD,CACI9E,MAAO6F,EAAOD,MACdrG,IAAK,EAAGkF,IAAK,EAAGD,KAAM,MACtBE,SAAU,kBAAM,gBAAGU,EAAH,EAAGA,EAAH,OAlCX,SAAC,GAAe,IAC3BwB,EAAY,CACdhB,MAF4B,EAAZA,OAIpBE,EAAUc,GACVb,EAAcK,QAAQjH,WAAW0H,SAASD,EAAUhB,OA6BbkB,C,qVAAa,CAAD,GAAMjB,EAAN,CAAcD,MAAOR,aCxDjE2B,EAnBH,SAAArB,GAWV,OAJAO,oBAAU,WACR3C,QAAQC,IAAI,gBAIZ,yBAAK3F,MAXU,CACfiH,WAAY,OACZC,YAAa,OACbkC,SAAU,UASN,kBAAC,EAAD,CAAad,SAAU3H,OAAO2H,WAChC,kBAAC,EAAD,QCNce,QACW,cAA7B1I,OAAO2H,SAASgB,UAEe,UAA7B3I,OAAO2H,SAASgB,UAEhB3I,OAAO2H,SAASgB,SAASC,MACvB,2DCZNC,IAAS1H,OAAO,kBAAC,EAAD,MAAS2H,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.6405cbee.chunk.js","sourcesContent":["import React from 'react'\n\nconst Footer = () => {\n\n    const style = {\n        textAlign: 'right'\n    }\n\n    return <div style={style}>\n        <p>Copyright (c) Jussi Enroos 2019<br />\n        <a href='https://github.com/McDevon/shower-mixer'>Source</a> with MIT license</p>\n    </div>\n}\n\nexport default Footer","const vendorCheck = () => {\n    const vendors = ['webkit', 'moz'];\n    for (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n            window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n}\n\nconst startRender = (canvas, item) => {\n    if (typeof (canvas.getContext) === undefined) {\n        return\n    }\n\n    vendorCheck()\n\n    let cx = canvas.getContext('2d'),\n        lastTime = (new Date()).getTime(),\n        currentTime = 0,\n        dt = 0,\n        fixedDeltaCounter = 0,\n        fixedCount = 0\n    \n    const maxLoops = 1,\n        fixedDelta = 1.0/60\n    \n    canvas.simulation = item\n    item.init(canvas)\n\n    const simulationLoop = () => {\n        window.requestAnimationFrame(simulationLoop)\n\n        currentTime = (new Date()).getTime()\n        dt = Math.min((currentTime - lastTime) / 1000, 0.03)\n\n        fixedDeltaCounter += dt\t\t\n        fixedCount = 0\n\t\t\n\t\tif (fixedDeltaCounter < fixedDelta) {\n\t\t\tfixedDeltaCounter = fixedDelta\n\t\t}\n\t\t\n\t\twhile (fixedDeltaCounter >= fixedDelta && fixedCount < maxLoops) {\n\t\t\titem.fixedUpdate(fixedDelta)\n\t\t\tfixedDeltaCounter -= fixedDelta\n\t\t\tfixedCount++\n\t\t}\n\t\t\n\t\tif (fixedCount >= maxLoops) {\n\t\t\tfixedDeltaCounter = 0\n\t\t}\n\n        item.update(dt)\n\n        item.render(cx)\n\n        lastTime = currentTime\n    }\n\n    simulationLoop()\n}\n\nexport default startRender","class RingBuffer {\n    constructor(size) {\n        this.size = size\n        this.buffer = []\n        this.buffer.length = size\n        this.nextIndex = 0\n    }\n\n    put(value) {\n        this.buffer[this.nextIndex] = value\n        this.nextIndex = (this.nextIndex + 1) % this.size\n    }\n\n    getHead() {\n        return this.buffer[(this.nextIndex - 1) % this.size]\n    }\n\n    getTail() {\n        return this.buffer[this.nextIndex]\n    }\n\n    getAll() {\n        let index = this.nextIndex\n        let ret = []\n        for (let i = 0; i < this.size; i++) {\n            ret.push(this.buffer[index])\n            index = (index + 1) % this.size\n        }\n        return ret\n    }\n\n}\n\nexport default RingBuffer","\nclass Plotter {\n\n    constructor(maxVals, top, bottom, canvas, targetTop, targetBottom) {\n        this.margin = 5\n        this.width = canvas.width - this.margin * 2\n        this.height = canvas.height - this.margin * 2\n        this.maxVals = maxVals\n        this.top = top\n        this.bottom = bottom\n        this.targetTop = targetTop\n        this.targetBottom = targetBottom\n        this.stepLength = this.width / maxVals\n        this.verticalStep = this.height / (top - bottom)\n        this.cx = canvas.getContext('2d')\n\n    }\n\n    draw(data) {\n\n        const x0 = this.pixel(this.margin), y0 = this.pixel(this.margin)\n        const x1 = this.pixel(x0 + this.width - this.margin * 2), y1 = this.pixel(y0 + this.height - this.margin * 2)\n        \n        this.cx.strokeStyle = '#FFAA00'\n        this.cx.lineWidth = 1\n        this.cx.beginPath()\n        for (let i = 0, count = data.length; i < count; i++) {\n            const value = data[i]\n            const xd = x0 + this.stepLength * i\n            const yd = y0 + this.height - (this.verticalStep * (value - this.bottom))\n            if (i === 0) {\n                this.cx.moveTo(xd, yd)\n            } else {\n                this.cx.lineTo(xd, yd)\n            }\n        }\n        this.cx.stroke()\n\n        this.cx.strokeStyle = '#000000'\n        this.cx.fillStyle = '#000000'\n        this.cx.lineWidth = 1\n\n        this.cx.beginPath()\n        this.cx.moveTo(x0, y0)\n        this.cx.lineTo(x0, y1)\n        this.cx.stroke()\n        this.cx.beginPath()\n        this.cx.moveTo(x0, y0)\n        this.cx.lineTo(x0 - 2, y0 + 10)\n        this.cx.lineTo(x0 + 2, y0 + 10)\n        this.cx.fill()\n\n        this.cx.beginPath()\n        this.cx.moveTo(x0, y1)\n        this.cx.lineTo(x1, y1)\n        this.cx.stroke()\n        this.cx.beginPath()\n        this.cx.moveTo(x1, y1)\n        this.cx.lineTo(x1 - 10, y1 - 2)\n        this.cx.lineTo(x1 - 10, y1 + 2)\n        this.cx.fill()\n\n        this.cx.strokeStyle = '#77AA77'\n        this.cx.beginPath()\n        this.cx.moveTo(x0, this.pixel(y0 + this.height - (this.verticalStep * (this.targetTop - this.bottom))))\n        this.cx.lineTo(x1, this.pixel(y0 + this.height - (this.verticalStep * (this.targetTop - this.bottom))))\n        this.cx.moveTo(x0, this.pixel(y0 + this.height - (this.verticalStep * (this.targetBottom - this.bottom))))\n        this.cx.lineTo(x1, this.pixel(y0 + this.height - (this.verticalStep * (this.targetBottom - this.bottom))))\n        this.cx.stroke()\n    }\n\n    pixel(value) {\n        return Math.round(value) + 0.5\n    }\n}\n\nexport default Plotter","import RingBuffer from \"../simulations/RingBuffer\";\nimport Plotter from \"./Plotter\";\n\nclass BeerGameSimulation {\n\n    init(canvas) {\n        this.canvas = canvas\n\n        this.width = canvas.width\n        this.height = canvas.height\n\n        const delaySeconds = 3\n\n        this.delayQueue = new RingBuffer(delaySeconds * 60)\n        this.running = true\n\n        this.targetTemperature = 36\n        this.minTemperature = 15\n        this.maxTemperature = 55\n        this.maxChangeSpeed = 4\n\n        this.maxDeltaSpeed = 0.02\n        this.lastDiff = 0\n\n        this.reset()\n    }\n\n    reset() {\n\n        this.controlMinTemperature = this.minTemperature + Math.random() * 12\n        this.controlMaxTemperature = this.maxTemperature - Math.random() * 10\n        this.currentTemperature = this.controlMinTemperature + Math.random() * 3\n        this.mixerTemperature = this.currentTemperature\n\n        for (let i = 0; i < this.delayQueue.size; i++) {\n            this.delayQueue.put(this.currentTemperature)\n        }\n\n        const graphLen = 30 * 60\n        this.graphList = new RingBuffer(graphLen)\n\n        this.plotter = new Plotter(\n            graphLen,\n            this.maxTemperature,\n            this.minTemperature,\n            this.canvas,\n            this.targetTemperature + 0.5,\n            this.targetTemperature - 0.5\n        )\n\n        const mixerValue = 1 - (this.mixerTemperature - this.controlMinTemperature) / (this.controlMaxTemperature - this.controlMinTemperature)\n\n        return mixerValue\n    }\n\n    setMixer(mixerValue) {\n        this.mixerTemperature = this.controlMinTemperature + (this.controlMaxTemperature - this.controlMinTemperature) * (1 - mixerValue)\n        console.log(`Target ${this.mixerTemperature}`)\n    }\n\n    fixedUpdate(dt) {\n        const distance = (this.mixerTemperature - this.currentTemperature)\n        let diff = distance\n        const slowDist = this.maxChangeSpeed / (this.maxDeltaSpeed * dt)\n        if (Math.abs(distance) < slowDist) {\n            const mul = Math.abs(distance) * this.maxDeltaSpeed\n            diff = Math.sign(distance) * mul\n        }\n        if (Math.abs(diff) > this.maxChangeSpeed * dt) {\n            diff = this.maxChangeSpeed * Math.sign(diff) * dt\n        }\n\n        if (Math.abs(diff) > Math.abs(this.lastDiff) && Math.abs(this.lastDiff - diff) > this.maxDeltaSpeed * dt) {\n            diff = this.lastDiff + this.maxDeltaSpeed * dt * Math.sign(diff)\n        }\n\n        this.lastDiff = diff\n        this.currentTemperature += diff\n\n        const nextTempValue = this.delayQueue.getTail()\n        this.delayQueue.put(this.currentTemperature)\n        this.graphList.put(nextTempValue)\n    }\n\n    update(_) { }\n\n    render(_) {\n        const context = this.canvas.getContext('2d')\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\n        this.plotter.draw(this.graphList.getAll().filter(function (el) {\n            return el != null;\n        }))\n    }\n}\n\nconst showerSim = () => {\n    return new BeerGameSimulation()\n}\n\nexport default showerSim","import React from 'react'\nimport Slider from 'react-input-slider'\n\nconst ShowerControl = ({ value, step, min, max, onChange, suffix='' }) => {\n    const divStyle = {\n        marginTop: '5px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        marginBottom: '5px'\n    }\n    console.log(`Mixer value ${value}`)\n    return <div style={divStyle}>\n        <Slider\n            axis=\"y\"\n            ystep={step}\n            ymin={min}\n            ymax={max}\n            y={value}\n            onChange={onChange()}\n            styles={{\n                track: {\n                  backgroundColor: 'red',\n                  height: 300\n                },\n                active: {\n                  backgroundColor: 'blue'\n                }\n              }}\n        />\n    </div>\n}\n\nexport default ShowerControl","import React, { useState, useEffect, useRef } from 'react'\nimport startRender from '../simulations/RenderLoop'\nimport showerSim from '../simulations/ShowerSim'\nimport ShowerControl from './ShowerControl';\n\nconst ShowerMixer = props => {\n    const [shower, setShower] = useState({\n        mixer: 1\n    })\n\n    const canvasElement = useRef(null)\n\n    const titleAreaStyle = {\n        paddingLeft: '25px',\n        paddingRight: '25px',\n    }\n    const controlAreaStyle = {\n        paddingLeft: '25px',\n        paddingRight: '25px',\n    }\n    const columnStyle = {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '200px',\n        marginLeft: '5px',\n        marginRight: '5px'\n    }\n    const ingressStyle = {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '590px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        paddingLeft: '25px',\n        paddingRight: '25px',\n        paddingTop: '20px'\n    }\n    const canvasStyle = {\n        marginLeft: '5px',\n        marginRight: '5px',\n        paddingLeft: '25px',\n        paddingRight: '25px',\n        paddingTop: '10px'\n    }\n\n    const changeShower = ({ mixer }) => {\n        const newShower = {\n            mixer: mixer\n        }\n        setShower(newShower)\n        canvasElement.current.simulation.setMixer(newShower.mixer)\n    }\n\n    const startHook = () => {\n        console.log('start hook')\n        console.log(props.location.search)\n\n        startRender(canvasElement.current, showerSim())\n        const showerVal = canvasElement.current.simulation.reset()\n        setShower({ mixer: showerVal })\n    }\n\n    useEffect(startHook, [])\n\n    return <div>\n         <div style={titleAreaStyle}>\n            <h1>{'Have a Nice Shower'}</h1>\n            <p>{\"You are entering a shower. But it's way too cold! Use the shower mixer controls to set the temperature to a reasonable setting.\"}</p>\n            <p>{\"You can follow the current temperature from the graph below. The proper temperature is marked with the green lines, so aim to get the temperature between them.\"}</p>\n         </div>\n        <canvas style={canvasStyle} ref={canvasElement} width='590' height='400' />\n        <div style={controlAreaStyle}>\n            <div style={columnStyle}>\n                <div>\n                    {'Shower Mixer Control'}\n                </div>\n                <ShowerControl\n                    value={shower.mixer}\n                    min={0} max={1} step={0.0025}\n                    onChange={() => ({ y }) => changeShower({ ...shower, mixer: y })}\n                />\n            </div>\n        </div>\n    </div>\n}\n\nexport default ShowerMixer","import React, { useEffect } from 'react'\nimport Footer from './components/Footer'\nimport ShowerMixer from './components/ShowerMixer';\n\nconst App = props => {\n  const divStyle = {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: '600px'\n  }\n\n  useEffect(() => {\n    console.log('app effect')\n  })\n\n  return (\n    <div style={divStyle}>\n        <ShowerMixer location={window.location} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}