{"version":3,"sources":["components/Footer.js","simulations/RenderLoop.js","simulations/RingBuffer.js","simulations/Plotter.js","simulations/PidController.js","simulations/ShowerSim.js","components/ShowerControl.js","components/LabelSlider.js","components/PidControls.js","components/Button.js","components/InfoColumn.js","components/TitleArea.js","components/CompletionDisplay.js","components/ShowerMixer.js","App.js","serviceWorker.js","index.js"],"names":["Footer","style","textAlign","href","startRender","canvas","item","undefined","getContext","vendors","x","length","window","requestAnimationFrame","cancelAnimationFrame","vendorCheck","cx","lastTime","Date","getTime","currentTime","dt","fixedDeltaCounter","fixedCount","simulation","init","simulationLoop","Math","min","fixedUpdate","update","render","RingBuffer","size","this","buffer","nextIndex","value","index","ret","i","push","Plotter","maxVals","top","bottom","targetTop","targetBottom","margin","width","height","stepLength","verticalStep","prevx","prevStartX","posTop","posBottom","region","stroke","fillStyle","lineTo","fill","data","x0","pixel","y0","x1","y1","strokeStyle","lineWidth","prevy","prevRegion","beginPath","moveTo","prevValue","count","xd","yd","drawChartLine","round","PidController","p","d","minU","maxU","antiWindup","e","lastE","iTerm","current","target","newI","u","enableAntiWindup","ShowerSimulation","delayQueue","delaySeconds","running","targetTemperature","minTemperature","maxTemperature","maxChangeSpeed","completionTime","completeTimer","timer","maxDeltaSpeed","lastDiff","pidControlValue","usePid","reset","completionCallback","pidCallback","controlMinTemperature","random","controlMaxTemperature","currentTemperature","mixerTemperature","put","graphList","plotter","pid","tempToMixer","console","log","mixerValue","mixerToTemp","step","getTail","distance","diff","slowDist","abs","mul","sign","nextTempValue","completed","_","clearRect","draw","getAll","filter","el","showerSim","ShowerControl","max","onChange","suffix","axis","ystep","ymin","ymax","y","styles","track","backgroundColor","active","LabelSlider","label","labelValue","marginTop","marginLeft","marginRight","marginBottom","xstep","xmin","xmax","PidControls","changePid","padding","toFixed","maxP","Button","onClick","text","disabled","StyledButton","styled","button","InfoColumn","pure","visible","showPid","pidSelected","restartSelected","fullColumnStyle","display","verticalAlign","buttonContainerStyle","TitleArea","startSelected","startDisabled","paddingLeft","paddingRight","CompletionDisplay","time","ShowerMixer","props","canvasElement","setRunning","newState","setState","page","controlValue","shower","event","preventDefault","state","pageState","setPidValues","setUsePid","newPid","changeShower","mixer","setMixer","React","createRef","showerVal","paddingTop","ref","Component","App","useEffect","maxWidth","location","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6e02850.chunk.js","sourcesContent":["import React from 'react'\n\nconst Footer = () => {\n\n    const style = {\n        textAlign: 'right'\n    }\n\n    return <div style={style}>\n        <p>Copyright (c) Jussi Enroos 2019<br />\n        <a href='https://github.com/McDevon/shower-mixer'>Source</a> with MIT license</p>\n    </div>\n}\n\nexport default Footer","const vendorCheck = () => {\n    const vendors = ['webkit', 'moz'];\n    for (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n            window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n}\n\nconst startRender = (canvas, item) => {\n    if (typeof (canvas.getContext) === undefined) {\n        return\n    }\n\n    vendorCheck()\n\n    let cx = canvas.getContext('2d'),\n        lastTime = (new Date()).getTime(),\n        currentTime = 0,\n        dt = 0,\n        fixedDeltaCounter = 0,\n        fixedCount = 0\n    \n    const maxLoops = 1,\n        fixedDelta = 1.0/60\n    \n    canvas.simulation = item\n    item.init(canvas)\n\n    const simulationLoop = () => {\n        window.requestAnimationFrame(simulationLoop)\n\n        currentTime = (new Date()).getTime()\n        dt = Math.min((currentTime - lastTime) / 1000, 0.03)\n\n        fixedDeltaCounter += dt\t\t\n        fixedCount = 0\n\t\t\n\t\tif (fixedDeltaCounter < fixedDelta) {\n\t\t\tfixedDeltaCounter = fixedDelta\n\t\t}\n\t\t\n\t\twhile (fixedDeltaCounter >= fixedDelta && fixedCount < maxLoops) {\n\t\t\titem.fixedUpdate(fixedDelta)\n\t\t\tfixedDeltaCounter -= fixedDelta\n\t\t\tfixedCount++\n\t\t}\n\t\t\n\t\tif (fixedCount >= maxLoops) {\n\t\t\tfixedDeltaCounter = 0\n\t\t}\n\n        item.update(dt)\n\n        item.render(cx)\n\n        lastTime = currentTime\n    }\n\n    simulationLoop()\n}\n\nexport default startRender","class RingBuffer {\n    constructor(size) {\n        this.size = size\n        this.buffer = []\n        this.buffer.length = size\n        this.nextIndex = 0\n    }\n\n    put(value) {\n        this.buffer[this.nextIndex] = value\n        this.nextIndex = (this.nextIndex + 1) % this.size\n    }\n\n    getHead() {\n        return this.buffer[(this.nextIndex - 1) % this.size]\n    }\n\n    getTail() {\n        return this.buffer[this.nextIndex]\n    }\n\n    getAll() {\n        let index = this.nextIndex\n        let ret = []\n        for (let i = 0; i < this.size; i++) {\n            ret.push(this.buffer[index])\n            index = (index + 1) % this.size\n        }\n        return ret\n    }\n\n}\n\nexport default RingBuffer","\nclass Plotter {\n\n    constructor(maxVals, top, bottom, canvas, targetTop, targetBottom) {\n        this.margin = 5\n        this.width = canvas.width - this.margin * 2\n        this.height = canvas.height - this.margin * 2\n        this.maxVals = maxVals\n        this.top = top\n        this.bottom = bottom\n        this.targetTop = targetTop\n        this.targetBottom = targetBottom\n        this.stepLength = (this.width - this.margin * 2) / maxVals\n        this.verticalStep = (this.height - this.margin * 2) / (top - bottom)\n        this.cx = canvas.getContext('2d')\n    }\n\n    drawChartLine(value, prevx, prevStartX, posTop, posBottom, region) {\n        this.cx.stroke()\n        \n        if (region !== 1) {\n            this.cx.fillStyle = region === 0 ? '#BBBBFF55' : '#FFBBBB55'\n            this.cx.lineTo(prevx, value < this.targetBottom ? posBottom : posTop)\n            this.cx.lineTo(prevStartX, value < this.targetBottom ? posBottom : posTop)\n            this.cx.fill()\n        }\n    }\n\n    draw(data) {\n\n        const x0 = this.pixel(this.margin), y0 = this.pixel(this.margin)\n        const x1 = this.pixel(x0 + this.width - this.margin * 2), y1 = this.pixel(y0 + this.height - this.margin * 2)\n        \n        const posTop = y0 + this.height - (this.verticalStep * (this.targetTop - this.bottom))\n        const posBottom = y0 + this.height - (this.verticalStep * (this.targetBottom - this.bottom))\n        this.cx.strokeStyle = '#002200'\n        this.cx.lineWidth = 2\n        let prevx = x0, prevy = y0 + this.height - (this.verticalStep * (data[0] - this.bottom))\n        let prevRegion = 1\n\n        this.cx.beginPath()\n        this.cx.moveTo(prevx, prevy)\n\n        let prevStartX = x0\n        let prevValue = data[0]\n        for (let i = 0, count = data.length; i < count; i++) {\n            const value = data[i]\n            const region = value < this.targetBottom ? 0 : value > this.targetTop ? 2 : 1\n            const xd = x0 + this.stepLength * i\n            const yd = y0 + this.height - (this.verticalStep * (value - this.bottom))\n            if (region !== prevRegion) {\n                this.drawChartLine(prevValue, prevx, prevStartX, posTop, posBottom, prevRegion)\n                this.cx.beginPath()\n                this.cx.moveTo(prevx, prevy)\n                prevRegion = region\n                prevStartX = prevx\n                prevValue = value\n            }\n            this.cx.lineTo(xd, yd)\n\n            prevx = xd\n            prevy = yd\n        }\n        this.drawChartLine(prevValue, prevx, prevStartX, posTop, posBottom, prevRegion)\n        \n        this.cx.strokeStyle = '#000000'\n        this.cx.fillStyle = '#000000'\n        this.cx.lineWidth = 1\n\n        this.cx.beginPath()\n        this.cx.moveTo(x0, y0)\n        this.cx.lineTo(x0, y1)\n        this.cx.stroke()\n        this.cx.beginPath()\n        this.cx.moveTo(x0, y0)\n        this.cx.lineTo(x0 - 2, y0 + 10)\n        this.cx.lineTo(x0 + 2, y0 + 10)\n        this.cx.fill()\n\n        this.cx.beginPath()\n        this.cx.moveTo(x0, y1)\n        this.cx.lineTo(x1, y1)\n        this.cx.stroke()\n        this.cx.beginPath()\n        this.cx.moveTo(x1, y1)\n        this.cx.lineTo(x1 - 10, y1 - 2)\n        this.cx.lineTo(x1 - 10, y1 + 2)\n        this.cx.fill()\n\n        this.cx.strokeStyle = '#77AA77'\n        this.cx.beginPath()\n        this.cx.moveTo(x0, this.pixel(y0 + this.height - (this.verticalStep * (this.targetTop - this.bottom))))\n        this.cx.lineTo(x1, this.pixel(y0 + this.height - (this.verticalStep * (this.targetTop - this.bottom))))\n        this.cx.moveTo(x0, this.pixel(y0 + this.height - (this.verticalStep * (this.targetBottom - this.bottom))))\n        this.cx.lineTo(x1, this.pixel(y0 + this.height - (this.verticalStep * (this.targetBottom - this.bottom))))\n        this.cx.stroke()\n    }\n\n    pixel(value) {\n        return Math.round(value) + 0.5\n    }\n}\n\nexport default Plotter","class PidController {\n    constructor(p, i, d, minU, maxU, antiWindup = false) {\n        this.e = 0\n        this.lastE = 0\n        this.p = p\n        this.i = i\n        this.d = d\n        this.minU = minU\n        this.maxU = maxU\n        this.iTerm = 0\n        this.antiWindup = antiWindup\n    }\n\n    step(current, target) {\n\n        const e = target - current\n        const newI = this.iTerm + e\n        const d = e - this.lastE\n\n        let u = this.p * e + this.i * newI + this.d * d\n\n        let enableAntiWindup = false\n\n        if (u > this.maxU) {\n            u = this.maxU\n            if (this.antiWindup && e > 0) {\n                enableAntiWindup = true\n            }\n        } else if (u < this.minU) {\n            u = this.minU\n            if (this.antiWindup && e < 0) {\n                enableAntiWindup = true\n            }\n        }\n\n        if (!enableAntiWindup) {\n            this.iTerm = newI\n        }\n\n        this.lastE = e\n\n        return u\n    }\n}\n\nexport default PidController","import RingBuffer from \"../simulations/RingBuffer\";\nimport Plotter from \"./Plotter\";\nimport PidController from \"./PidController\";\n\nclass ShowerSimulation {\n\n    init(canvas) {\n        this.canvas = canvas\n\n        this.width = canvas.width\n        this.height = canvas.height\n\n        const delaySeconds = 3\n\n        this.delayQueue = new RingBuffer(delaySeconds * 60)\n        this.running = true\n\n        this.targetTemperature = 36\n        this.minTemperature = 15\n        this.maxTemperature = 55\n        this.maxChangeSpeed = 4\n        this.completionTime = 4\n        this.completeTimer = 0\n        this.timer = 0\n\n        this.maxDeltaSpeed = 0.02\n        this.lastDiff = 0\n\n        this.pidControlValue = 0\n\n        this.running = false\n        this.usePid = false\n\n        this.reset()\n    }\n\n    reset(completionCallback, pidCallback) {\n\n        this.controlMinTemperature = this.minTemperature + Math.random() * 12\n        this.controlMaxTemperature = this.maxTemperature - Math.random() * 10\n        this.currentTemperature = this.controlMinTemperature + Math.random() * 3\n        this.mixerTemperature = this.currentTemperature\n        this.completionCallback = completionCallback\n        this.pidCallback = pidCallback\n        this.timer = 0\n\n        for (let i = 0; i < this.delayQueue.size; i++) {\n            this.delayQueue.put(this.currentTemperature)\n        }\n\n        const graphLen = 30 * 60\n        this.graphList = new RingBuffer(graphLen)\n\n        this.plotter = new Plotter(\n            graphLen,\n            this.maxTemperature,\n            this.minTemperature,\n            this.canvas,\n            this.targetTemperature + 0.5,\n            this.targetTemperature - 0.5\n        )\n\n        this.pid = new PidController(0.001, 0.00015, 0,\n            0, 1, true)\n\n        const mixerValue = this.tempToMixer(this.mixerTemperature)\n        return mixerValue\n    }\n\n    setRunning(value) {\n        this.running = value\n    }\n\n    setUsePid(value) {\n        this.usePid = value\n    }\n\n    setPidValues({p, i, d}) {\n        this.pid.p = p\n        this.pid.i = i\n        this.pid.d = d\n    }\n\n    tempToMixer(value) {\n        return 1 - (value - this.controlMinTemperature) / (this.controlMaxTemperature - this.controlMinTemperature)\n    }\n\n    mixerToTemp(value) {\n        return this.controlMinTemperature + (this.controlMaxTemperature - this.controlMinTemperature) * (1 - value)\n    }\n\n    completed() {\n        console.log('COMPLETED!')\n        this.completionCallback(this.timer)\n    }\n\n    setMixer(mixerValue) {\n        this.mixerTemperature = this.mixerToTemp(mixerValue)\n        console.log(`Target ${this.mixerTemperature}`)\n    }\n\n    fixedUpdate(dt) {\n        if (!this.running) { return }\n\n        this.timer += dt\n\n        if (this.usePid) {\n            this.pidControlValue = 1 - this.pid.step(this.delayQueue.getTail() || this.currentTemperature, this.targetTemperature)\n            this.mixerTemperature = this.mixerToTemp(this.pidControlValue)\n        }\n\n        const distance = (this.mixerTemperature - this.currentTemperature)\n        let diff = distance\n        const slowDist = this.maxChangeSpeed / (this.maxDeltaSpeed * dt)\n        if (Math.abs(distance) < slowDist) {\n            const mul = Math.abs(distance) * this.maxDeltaSpeed\n            diff = Math.sign(distance) * mul\n        }\n        if (Math.abs(diff) > this.maxChangeSpeed * dt) {\n            diff = this.maxChangeSpeed * Math.sign(diff) * dt\n        }\n\n        if (Math.abs(diff) > Math.abs(this.lastDiff) && Math.abs(this.lastDiff - diff) > this.maxDeltaSpeed * dt) {\n            diff = this.lastDiff + this.maxDeltaSpeed * dt * Math.sign(diff)\n        }\n\n        this.lastDiff = diff\n        this.currentTemperature += diff\n\n        const nextTempValue = this.delayQueue.getTail()\n        this.delayQueue.put(this.currentTemperature)\n        this.graphList.put(nextTempValue)\n\n        if (nextTempValue < this.targetTemperature + 0.5 && nextTempValue > this.targetTemperature - 0.5) {\n            this.completeTimer += dt\n            if (this.completeTimer >= this.completionTime) {\n                this.completed()\n            }\n        } else {\n            this.completeTimer = 0\n        }\n    }\n\n    update(_) {\n        if (this.usePid) {\n            this.pidCallback(this.pidControlValue)\n        }\n    }\n\n    render(_) {\n        const context = this.canvas.getContext('2d')\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\n        this.plotter.draw(this.graphList.getAll().filter(function (el) {\n            return el != null;\n        }))\n    }\n}\n\nconst showerSim = () => {\n    return new ShowerSimulation()\n}\n\nexport default showerSim","import React from 'react'\nimport Slider from 'react-input-slider'\n\nconst ShowerControl = ({ value, step, min, max, onChange, suffix='' }) => {\n    const divStyle = {\n        margin: '10px 5px'\n    }\n    return <div style={divStyle}>\n        <Slider\n            axis=\"y\"\n            ystep={step}\n            ymin={min}\n            ymax={max}\n            y={value}\n            onChange={onChange()}\n            styles={{\n                track: {\n                  backgroundColor: 'red',\n                  height: 300\n                },\n                active: {\n                  backgroundColor: 'blue'\n                }\n              }}\n        />\n    </div>\n}\n\nexport default ShowerControl","import React from 'react'\nimport Slider from 'react-input-slider'\n\nconst LabelSlider = ({ label, value, step, min, max, onChange, suffix='', labelValue=value }) => {\n    const divStyle = {\n        marginTop: '5px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        marginBottom: '5px'\n    }\n    return <div style={divStyle}>\n        <div>\n            {`${label}: ${labelValue}${suffix}`}\n        </div>\n        <Slider\n            axis=\"x\"\n            xstep={step}\n            xmin={min}\n            xmax={max}\n            x={value}\n            onChange={onChange()}\n        />\n    </div>\n}\n\nexport default LabelSlider","import React from 'react'\nimport LabelSlider from './LabelSlider'\n\nconst PidControls = ({ pid, changePid }) => {\n\n    const style = {\n        padding: '10px 0px'\n    }\n\n    const maxP = 0.2, maxI = 0.0003, maxD = 5, minD = -5\n    const stepP = maxP / 200.0, stepI = maxI / 200.0, stepD = (maxD - minD) / 200.0\n\n    return <div style={style}>\n        <LabelSlider\n            label='P' value={pid.p} labelValue={(pid.p / maxP).toFixed(3)}\n            min={0} max={maxP} step={stepP}\n            onChange={() => ({x}) => changePid({ ...pid, p: x })}\n        />\n        <LabelSlider\n            label='I' value={pid.i} labelValue={(pid.i / maxI).toFixed(3)}\n            min={0} max={maxI} step={stepI}\n            onChange={() => ({x}) => changePid({ ...pid, i: x })}\n        />\n        <LabelSlider\n            label='D' value={pid.d} labelValue={(pid.d / maxD).toFixed(3)}\n            min={minD} max={maxD} step={stepD}\n            onChange={() => ({x}) => changePid({ ...pid, d: x })}\n        />\n    </div>\n}\n\nexport default PidControls","import React from 'react'\nimport styled from 'styled-components'\n\nconst Button = ({ onClick, text, disabled }) => {\n\n    const StyledButton = styled.button`\n    background-color: ${disabled ? '#c4cfc1' : '#4CAF50'};\n    border: none;\n    border-radius: 4px;\n    color: white;\n    padding: 10px 20px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    margin: 0px;\n    font-size: 16px;\n    opacity: ${disabled ? '0.6' : '1'};\n    :hover {\n        background-color: ${disabled ? '#c4cfc1' : '#5bc146'};\n    }\n    :focus {\n        outline: none;\n    }\n    :active {\n        padding: 9px 18px;\n        font-size: 14px;\n        margin: 1px 4px;\n    }\n    `\n\n    const divStyle = {\n        height: '42px',\n        marginRight: '5px'\n    }\n\n    return <div style={divStyle}>\n        <StyledButton onClick={onClick} disabled={disabled}>\n            {text}\n        </StyledButton>\n    </div>\n}\n\nexport default Button","import React from 'react'\nimport PidControls from './PidControls';\nimport Button from './Button';\nimport { pure } from 'recompose'\n\nconst InfoColumn = pure(({ visible, showPid, completed,\n    pidSelected, restartSelected,\n    pid, changePid }) => {\n\n    const fullColumnStyle = {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '370px',\n        marginLeft: '5px',\n        marginRight: '5px'\n    }\n    const buttonContainerStyle = {\n        display: 'flex'\n    }\n\n    if (showPid) {\n        return <div style={fullColumnStyle}>\n            {'PID controls'}\n            <PidControls\n                pid={pid}\n                changePid={changePid}\n            />\n            <p>{\"By default the controller is set to be a slightly too slow PI controller. Running the system is close to running a step response test for the controller.\"}</p>\n            <p>{\"At start, the initial value and control range are randomized.\"}</p>\n            <div style={buttonContainerStyle}>\n                <Button text='Restart PID' onClick={pidSelected} />\n                <Button text='Manual Control' onClick={restartSelected} />\n            </div>\n        </div>\n    } else if (visible) {\n        return <div style={fullColumnStyle}>\n            <h2>{'Well done!'}</h2>\n            <p>{\"This demo explores the behaviour of shower users, when there is a noticeable delay between controlling the mixer (input) and the temperature change (output).\"}</p>\n            <p>{\"The hypothesis is that the feedback loop created by the user and the shower typically makes the system output first oscillate, and then stabilize at the convenient temperature range. Much like when a bit too slow PI controller would control the system.\"}</p>\n            <div style={buttonContainerStyle}>\n                <Button text='Restart' onClick={restartSelected} disabled={!completed} />\n                <Button text='Run With PI Controller' onClick={pidSelected} />\n            </div>\n        </div>\n    } else {\n        return <div style={fullColumnStyle}></div>\n    }\n})\n\nexport default InfoColumn","import React from 'react'\nimport Button from './Button';\nimport { pure } from 'recompose'\n\nconst TitleArea = pure(({ startSelected, startDisabled }) => {\n    const titleAreaStyle = {\n        paddingLeft: '25px',\n        paddingRight: '25px',\n    }\n\n    return <div style={titleAreaStyle}>\n        <h1>{'Have a Nice Shower!'}</h1>\n        <p>{\"You are entering a shower. But it's way too cold! Use the shower mixer controls to set the temperature to a reasonable setting.\"}</p>\n        <p>{\"You can follow the current temperature from the graph below. The convenient zone is marked with the green lines, so aim to get the temperature between them.\"}</p>\n        <Button text='Start' onClick={startSelected} disabled={startDisabled} />\n    </div>\n})\n\nexport default TitleArea","import React from 'react'\nimport { pure } from 'recompose'\n\nconst CompletionDisplay = pure(({completed, time}) => {\n\n    if (completed) {\n        return <div>\n            {`\u001cCompleted in ${time.toFixed(2)}s`}\n        </div>\n    } else {\n        return <div></div>\n    }\n})\n\nexport default CompletionDisplay","import React from 'react'\nimport startRender from '../simulations/RenderLoop'\nimport showerSim from '../simulations/ShowerSim'\nimport ShowerControl from './ShowerControl';\nimport InfoColumn from './InfoColumn';\nimport TitleArea from './TitleArea';\nimport CompletionDisplay from './CompletionDisplay';\n\nclass ShowerMixer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            shower: 1,\n            time: 0,\n            page: {\n                running: 0,\n                completed: 0,\n                pid: 0\n            },\n            pid: {\n                p: 0.001,\n                i: 0.00015,\n                d: 0\n            }\n        }\n        this.canvasElement = React.createRef()\n    }\n\n    componentDidMount() {\n        startRender(this.canvasElement.current, showerSim())\n        const showerVal = this.canvasElement.current.simulation.reset(this.completionCallback(this.state.page.pid), this.pidCallback)\n        this.canvasElement.current.simulation.setPidValues(this.state.pid)\n        this.canvasElement.current.simulation.setUsePid(this.state.page.pid)\n        this.canvasElement.current.simulation.setRunning(this.state.page.running)\n        this.setState({ shower: showerVal })\n    }\n\n    completionCallback = (usePid) => {\n        return (completionTime) => {\n            console.log('COMPLETION CALLBACK', completionTime)\n            this.canvasElement.current.simulation.setRunning(false)\n            const newState = {\n                running: 0,\n                completed: 1,\n                pid: usePid\n            }\n            this.setState({ page: newState, time: completionTime })\n        }\n    }\n\n    pidCallback = (controlValue) => {\n        this.setState({ shower: controlValue })\n    }\n\n    startSelected = (event) => {\n        event.preventDefault()\n        console.log('Start selected')\n        this.canvasElement.current.simulation.setRunning(true)\n        this.setState({ page: { ...this.state.pageState, running: 1 } })\n    }\n\n    pidSelected = (event) => {\n        event.preventDefault()\n        console.log('PID selected')\n        this.setState({ shower: this.canvasElement.current.simulation.reset(this.completionCallback(1), this.pidCallback) })\n        const newState = {\n            running: 1,\n            completed: 0,\n            pid: 1\n        }\n        this.setState({ page: newState })\n        this.canvasElement.current.simulation.setPidValues(this.state.pid)\n        this.canvasElement.current.simulation.setUsePid(true)\n        this.canvasElement.current.simulation.setRunning(true)\n    }\n\n    restartSelected = (event) => {\n        event.preventDefault()\n        console.log('Restart selected')\n        this.setState({ shower: this.canvasElement.current.simulation.reset(this.completionCallback(0), this.pidCallback) })\n        const newState = {\n            running: 1,\n            completed: 0,\n            pid: 0\n        }\n        this.setState({ page: newState })\n        this.canvasElement.current.simulation.setUsePid(false)\n        this.canvasElement.current.simulation.setRunning(true)\n    }\n\n    changePid = (newPid) => {\n        this.setState({ pid: newPid })\n        this.canvasElement.current.simulation.setPidValues(newPid)\n    }\n\n    changeShower = (mixer) => {\n        console.log('Change shower', mixer)\n        this.setState({ shower: mixer })\n        this.canvasElement.current.simulation.setMixer(mixer)\n    }\n\n    render() {\n        const controlAreaStyle = {\n            paddingLeft: '25px',\n            width: '590px',\n            paddingRight: '25px',\n        }\n        const columnStyle = {\n            display: 'inline-block',\n            verticalAlign: 'top',\n            width: '200px',\n            marginLeft: '5px',\n            marginRight: '5px'\n        }\n        const canvasStyle = {\n            marginLeft: '5px',\n            marginRight: '5px',\n            paddingLeft: '25px',\n            paddingRight: '25px',\n            paddingTop: '10px'\n        }\n\n        return <div>\n            <TitleArea\n                startSelected={this.startSelected}\n                startDisabled={this.state.page.running || this.state.page.completed} />\n            <canvas style={canvasStyle} ref={this.canvasElement} width='590' height='400' />\n            <div style={controlAreaStyle}>\n                <div style={columnStyle}>\n                    <div>\n                        {'Shower Mixer Control'}\n                    </div>\n                    <ShowerControl\n                        value={this.state.shower}\n                        min={0} max={1} step={0.0025}\n                        onChange={() => ({ y }) => { if (this.state.page.running && !this.state.page.pid) this.changeShower(y) }}\n                    />\n                    <CompletionDisplay completed={this.state.page.completed} time={this.state.time} />\n                </div>\n                <InfoColumn visible={this.state.page.completed} showPid={this.state.page.pid}\n                    pidSelected={this.pidSelected} restartSelected={this.restartSelected}\n                    pid={this.state.pid} changePid={this.changePid} completed={this.state.page.completed} />\n            </div>\n        </div>\n    }\n}\n\nexport default ShowerMixer","import React, { useEffect } from 'react'\nimport Footer from './components/Footer'\nimport ShowerMixer from './components/ShowerMixer';\n\nconst App = props => {\n  const divStyle = {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: '600px'\n  }\n\n  useEffect(() => {\n    console.log('app effect')\n  })\n\n  return (\n    <div style={divStyle}>\n        <ShowerMixer location={window.location} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}