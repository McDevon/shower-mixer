{"version":3,"sources":["components/Footer.js","simulations/RenderLoop.js","simulations/RingBuffer.js","simulations/Plotter.js","simulations/PidController.js","simulations/ShowerSim.js","components/ShowerControl.js","components/Button.js","components/LabelSlider.js","components/PidControls.js","components/InfoColumn.js","components/ShowerMixer.js","App.js","serviceWorker.js","index.js"],"names":["Footer","style","textAlign","href","startRender","canvas","item","undefined","getContext","vendors","x","length","window","requestAnimationFrame","cancelAnimationFrame","vendorCheck","cx","lastTime","Date","getTime","currentTime","dt","fixedDeltaCounter","fixedCount","simulation","init","simulationLoop","Math","min","fixedUpdate","update","render","RingBuffer","size","this","buffer","nextIndex","value","index","ret","i","push","Plotter","maxVals","top","bottom","targetTop","targetBottom","margin","width","height","stepLength","verticalStep","prevx","prevStartX","posTop","posBottom","region","stroke","fillStyle","lineTo","fill","data","x0","pixel","y0","x1","y1","strokeStyle","lineWidth","prevy","prevRegion","beginPath","moveTo","prevValue","count","xd","yd","drawChartLine","round","PidController","p","d","minU","maxU","antiWindup","e","lastE","iTerm","current","target","newI","u","enableAntiWindup","ShowerSimulation","delayQueue","delaySeconds","running","targetTemperature","minTemperature","maxTemperature","maxChangeSpeed","completionTime","completeTimer","maxDeltaSpeed","lastDiff","usePid","reset","completionCallback","controlMinTemperature","random","controlMaxTemperature","currentTemperature","mixerTemperature","put","graphList","plotter","pid","tempToMixer","console","log","mixerValue","mixerToTemp","controlValue","step","getTail","distance","diff","slowDist","abs","mul","sign","nextTempValue","completed","_","clearRect","draw","getAll","filter","el","showerSim","ShowerControl","max","onChange","suffix","marginTop","marginLeft","marginRight","marginBottom","axis","ystep","ymin","ymax","y","styles","track","backgroundColor","active","Button","onClick","text","disabled","StyledButton","styled","button","LabelSlider","label","labelValue","xstep","xmin","xmax","PidControls","changePid","padding","toFixed","maxP","maxD","InfoColumn","visible","showPid","pidSelected","restartSelected","shower","fullColumnStyle","display","verticalAlign","ShowerMixer","props","useState","mixer","setShower","setPid","canvasElement","useRef","setRunning","newShower","useEffect","location","search","showerVal","setPidValues","setUsePid","paddingLeft","paddingRight","event","preventDefault","paddingTop","ref","setMixer","changeShower","newPid","App","maxWidth","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7815a519.chunk.js","sourcesContent":["import React from 'react'\n\nconst Footer = () => {\n\n    const style = {\n        textAlign: 'right'\n    }\n\n    return <div style={style}>\n        <p>Copyright (c) Jussi Enroos 2019<br />\n        <a href='https://github.com/McDevon/shower-mixer'>Source</a> with MIT license</p>\n    </div>\n}\n\nexport default Footer","const vendorCheck = () => {\n    const vendors = ['webkit', 'moz'];\n    for (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n            window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n}\n\nconst startRender = (canvas, item) => {\n    if (typeof (canvas.getContext) === undefined) {\n        return\n    }\n\n    vendorCheck()\n\n    let cx = canvas.getContext('2d'),\n        lastTime = (new Date()).getTime(),\n        currentTime = 0,\n        dt = 0,\n        fixedDeltaCounter = 0,\n        fixedCount = 0\n    \n    const maxLoops = 1,\n        fixedDelta = 1.0/60\n    \n    canvas.simulation = item\n    item.init(canvas)\n\n    const simulationLoop = () => {\n        window.requestAnimationFrame(simulationLoop)\n\n        currentTime = (new Date()).getTime()\n        dt = Math.min((currentTime - lastTime) / 1000, 0.03)\n\n        fixedDeltaCounter += dt\t\t\n        fixedCount = 0\n\t\t\n\t\tif (fixedDeltaCounter < fixedDelta) {\n\t\t\tfixedDeltaCounter = fixedDelta\n\t\t}\n\t\t\n\t\twhile (fixedDeltaCounter >= fixedDelta && fixedCount < maxLoops) {\n\t\t\titem.fixedUpdate(fixedDelta)\n\t\t\tfixedDeltaCounter -= fixedDelta\n\t\t\tfixedCount++\n\t\t}\n\t\t\n\t\tif (fixedCount >= maxLoops) {\n\t\t\tfixedDeltaCounter = 0\n\t\t}\n\n        item.update(dt)\n\n        item.render(cx)\n\n        lastTime = currentTime\n    }\n\n    simulationLoop()\n}\n\nexport default startRender","class RingBuffer {\n    constructor(size) {\n        this.size = size\n        this.buffer = []\n        this.buffer.length = size\n        this.nextIndex = 0\n    }\n\n    put(value) {\n        this.buffer[this.nextIndex] = value\n        this.nextIndex = (this.nextIndex + 1) % this.size\n    }\n\n    getHead() {\n        return this.buffer[(this.nextIndex - 1) % this.size]\n    }\n\n    getTail() {\n        return this.buffer[this.nextIndex]\n    }\n\n    getAll() {\n        let index = this.nextIndex\n        let ret = []\n        for (let i = 0; i < this.size; i++) {\n            ret.push(this.buffer[index])\n            index = (index + 1) % this.size\n        }\n        return ret\n    }\n\n}\n\nexport default RingBuffer","\nclass Plotter {\n\n    constructor(maxVals, top, bottom, canvas, targetTop, targetBottom) {\n        this.margin = 5\n        this.width = canvas.width - this.margin * 2\n        this.height = canvas.height - this.margin * 2\n        this.maxVals = maxVals\n        this.top = top\n        this.bottom = bottom\n        this.targetTop = targetTop\n        this.targetBottom = targetBottom\n        this.stepLength = (this.width - this.margin * 2) / maxVals\n        this.verticalStep = (this.height - this.margin * 2) / (top - bottom)\n        this.cx = canvas.getContext('2d')\n    }\n\n    drawChartLine(value, prevx, prevStartX, posTop, posBottom, region) {\n        this.cx.stroke()\n        \n        if (region !== 1) {\n            this.cx.fillStyle = region === 0 ? '#BBBBFF55' : '#FFBBBB55'\n            this.cx.lineTo(prevx, value < this.targetBottom ? posBottom : posTop)\n            this.cx.lineTo(prevStartX, value < this.targetBottom ? posBottom : posTop)\n            this.cx.fill()\n        }\n    }\n\n    draw(data) {\n\n        const x0 = this.pixel(this.margin), y0 = this.pixel(this.margin)\n        const x1 = this.pixel(x0 + this.width - this.margin * 2), y1 = this.pixel(y0 + this.height - this.margin * 2)\n        \n        const posTop = y0 + this.height - (this.verticalStep * (this.targetTop - this.bottom))\n        const posBottom = y0 + this.height - (this.verticalStep * (this.targetBottom - this.bottom))\n        this.cx.strokeStyle = '#002200'\n        this.cx.lineWidth = 2\n        let prevx = x0, prevy = y0 + this.height - (this.verticalStep * (data[0] - this.bottom))\n        let prevRegion = 1\n\n        this.cx.beginPath()\n        this.cx.moveTo(prevx, prevy)\n\n        let prevStartX = x0\n        let prevValue = data[0]\n        for (let i = 0, count = data.length; i < count; i++) {\n            const value = data[i]\n            const region = value < this.targetBottom ? 0 : value > this.targetTop ? 2 : 1\n            const xd = x0 + this.stepLength * i\n            const yd = y0 + this.height - (this.verticalStep * (value - this.bottom))\n            if (region !== prevRegion) {\n                this.drawChartLine(prevValue, prevx, prevStartX, posTop, posBottom, prevRegion)\n                this.cx.beginPath()\n                this.cx.moveTo(prevx, prevy)\n                prevRegion = region\n                prevStartX = prevx\n                prevValue = value\n            }\n            this.cx.lineTo(xd, yd)\n\n            prevx = xd\n            prevy = yd\n        }\n        this.drawChartLine(prevValue, prevx, prevStartX, posTop, posBottom, prevRegion)\n        \n        this.cx.strokeStyle = '#000000'\n        this.cx.fillStyle = '#000000'\n        this.cx.lineWidth = 1\n\n        this.cx.beginPath()\n        this.cx.moveTo(x0, y0)\n        this.cx.lineTo(x0, y1)\n        this.cx.stroke()\n        this.cx.beginPath()\n        this.cx.moveTo(x0, y0)\n        this.cx.lineTo(x0 - 2, y0 + 10)\n        this.cx.lineTo(x0 + 2, y0 + 10)\n        this.cx.fill()\n\n        this.cx.beginPath()\n        this.cx.moveTo(x0, y1)\n        this.cx.lineTo(x1, y1)\n        this.cx.stroke()\n        this.cx.beginPath()\n        this.cx.moveTo(x1, y1)\n        this.cx.lineTo(x1 - 10, y1 - 2)\n        this.cx.lineTo(x1 - 10, y1 + 2)\n        this.cx.fill()\n\n        this.cx.strokeStyle = '#77AA77'\n        this.cx.beginPath()\n        this.cx.moveTo(x0, this.pixel(y0 + this.height - (this.verticalStep * (this.targetTop - this.bottom))))\n        this.cx.lineTo(x1, this.pixel(y0 + this.height - (this.verticalStep * (this.targetTop - this.bottom))))\n        this.cx.moveTo(x0, this.pixel(y0 + this.height - (this.verticalStep * (this.targetBottom - this.bottom))))\n        this.cx.lineTo(x1, this.pixel(y0 + this.height - (this.verticalStep * (this.targetBottom - this.bottom))))\n        this.cx.stroke()\n    }\n\n    pixel(value) {\n        return Math.round(value) + 0.5\n    }\n}\n\nexport default Plotter","class PidController {\n    constructor(p, i, d, minU, maxU, antiWindup = false) {\n        this.e = 0\n        this.lastE = 0\n        this.p = p\n        this.i = i\n        this.d = d\n        this.minU = minU\n        this.maxU = maxU\n        this.iTerm = 0\n        this.antiWindup = antiWindup\n    }\n\n    step(current, target) {\n\n        const e = target - current\n        const newI = this.iTerm + e\n        const d = e - this.lastE\n\n        let u = this.p * e + this.i * newI + this.d * d\n\n        let enableAntiWindup = false\n\n        if (u > this.maxU) {\n            u = this.maxU\n            if (this.antiWindup && e > 0) {\n                enableAntiWindup = true\n            }\n        } else if (u < this.minU) {\n            u = this.minU\n            if (this.antiWindup && e < 0) {\n                enableAntiWindup = true\n            }\n        }\n\n        if (!enableAntiWindup) {\n            this.iTerm = newI\n        }\n\n        this.lastE = e\n\n        return u\n    }\n}\n\nexport default PidController","import RingBuffer from \"../simulations/RingBuffer\";\nimport Plotter from \"./Plotter\";\nimport PidController from \"./PidController\";\n\nclass ShowerSimulation {\n\n    init(canvas) {\n        this.canvas = canvas\n\n        this.width = canvas.width\n        this.height = canvas.height\n\n        const delaySeconds = 3\n\n        this.delayQueue = new RingBuffer(delaySeconds * 60)\n        this.running = true\n\n        this.targetTemperature = 36\n        this.minTemperature = 15\n        this.maxTemperature = 55\n        this.maxChangeSpeed = 4\n        this.completionTime = 4\n        this.completeTimer = 0\n\n        this.maxDeltaSpeed = 0.02\n        this.lastDiff = 0\n\n        this.running = false\n        this.usePid = false\n\n        this.reset()\n    }\n\n    reset(completionCallback) {\n\n        this.controlMinTemperature = this.minTemperature + Math.random() * 12\n        this.controlMaxTemperature = this.maxTemperature - Math.random() * 10\n        this.currentTemperature = this.controlMinTemperature + Math.random() * 3\n        this.mixerTemperature = this.currentTemperature\n        this.completionCallback = completionCallback\n\n        for (let i = 0; i < this.delayQueue.size; i++) {\n            this.delayQueue.put(this.currentTemperature)\n        }\n\n        const graphLen = 30 * 60\n        this.graphList = new RingBuffer(graphLen)\n\n        this.plotter = new Plotter(\n            graphLen,\n            this.maxTemperature,\n            this.minTemperature,\n            this.canvas,\n            this.targetTemperature + 0.5,\n            this.targetTemperature - 0.5\n        )\n\n        this.pid = new PidController(0.001, 0.00015, 0,\n            0, 1, true)\n\n        const mixerValue = this.tempToMixer(this.mixerTemperature)\n        return mixerValue\n    }\n\n    setRunning(value) {\n        this.running = value\n    }\n\n    setUsePid(value) {\n        this.usePid = value\n    }\n\n    setPidValues({p, i, d}) {\n        this.pid.p = p\n        this.pid.i = i\n        this.pid.d = d\n    }\n\n    tempToMixer(value) {\n        return 1 - (value - this.controlMinTemperature) / (this.controlMaxTemperature - this.controlMinTemperature)\n    }\n\n    mixerToTemp(value) {\n        return this.controlMinTemperature + (this.controlMaxTemperature - this.controlMinTemperature) * (1 - value)\n    }\n\n    completed() {\n        console.log('COMPLETED!')\n        this.completionCallback(this.tempToMixer(this.mixerTemperature))\n    }\n\n    setMixer(mixerValue) {\n        this.mixerTemperature = this.mixerToTemp(mixerValue)\n        console.log(`Target ${this.mixerTemperature}`)\n    }\n\n    fixedUpdate(dt) {\n        if (!this.running) { return }\n\n        if (this.usePid) {\n            const controlValue = 1 - this.pid.step(this.delayQueue.getTail() || this.currentTemperature, this.targetTemperature)\n            this.mixerTemperature = this.mixerToTemp(controlValue)\n        }\n\n        const distance = (this.mixerTemperature - this.currentTemperature)\n        let diff = distance\n        const slowDist = this.maxChangeSpeed / (this.maxDeltaSpeed * dt)\n        if (Math.abs(distance) < slowDist) {\n            const mul = Math.abs(distance) * this.maxDeltaSpeed\n            diff = Math.sign(distance) * mul\n        }\n        if (Math.abs(diff) > this.maxChangeSpeed * dt) {\n            diff = this.maxChangeSpeed * Math.sign(diff) * dt\n        }\n\n        if (Math.abs(diff) > Math.abs(this.lastDiff) && Math.abs(this.lastDiff - diff) > this.maxDeltaSpeed * dt) {\n            diff = this.lastDiff + this.maxDeltaSpeed * dt * Math.sign(diff)\n        }\n\n        this.lastDiff = diff\n        this.currentTemperature += diff\n\n        const nextTempValue = this.delayQueue.getTail()\n        this.delayQueue.put(this.currentTemperature)\n        this.graphList.put(nextTempValue)\n\n        if (nextTempValue < this.targetTemperature + 0.5 && nextTempValue > this.targetTemperature - 0.5) {\n            this.completeTimer += dt\n            if (this.completeTimer >= this.completionTime) {\n                this.completed()\n            }\n        } else {\n            this.completeTimer = 0\n        }\n    }\n\n    update(_) { }\n\n    render(_) {\n        const context = this.canvas.getContext('2d')\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\n        this.plotter.draw(this.graphList.getAll().filter(function (el) {\n            return el != null;\n        }))\n    }\n}\n\nconst showerSim = () => {\n    return new ShowerSimulation()\n}\n\nexport default showerSim","import React from 'react'\nimport Slider from 'react-input-slider'\n\nconst ShowerControl = ({ value, step, min, max, onChange, suffix='' }) => {\n    const divStyle = {\n        marginTop: '5px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        marginBottom: '5px'\n    }\n    console.log(`Mixer value ${value}`)\n    return <div style={divStyle}>\n        <Slider\n            axis=\"y\"\n            ystep={step}\n            ymin={min}\n            ymax={max}\n            y={value}\n            onChange={onChange()}\n            styles={{\n                track: {\n                  backgroundColor: 'red',\n                  height: 300\n                },\n                active: {\n                  backgroundColor: 'blue'\n                }\n              }}\n        />\n    </div>\n}\n\nexport default ShowerControl","import React from 'react'\nimport styled from 'styled-components'\n\nconst Button = ({ onClick, text, disabled }) => {\n\n    const StyledButton = styled.button`\n    background-color: ${disabled ? '#c4cfc1' : '#4CAF50'};\n    border: none;\n    border-radius: 4px;\n    color: white;\n    padding: 10px 20px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    margin: 0px;\n    font-size: 16px;\n    opacity: ${disabled ? '0.6' : '1'};\n    :hover {\n        background-color: ${disabled ? '#c4cfc1' : '#5bc146'};\n    }\n    :focus {\n        outline: none;\n    }\n    :active {\n        padding: 9px 18px;\n        font-size: 14px;\n        margin: 1px 4px;\n    }\n    `\n\n    const divStyle = {\n        height: '42px'\n    }\n\n    return <div style={divStyle}>\n        <StyledButton onClick={onClick} disabled={disabled}>\n            {text}\n        </StyledButton>\n    </div>\n}\n\nexport default Button","import React from 'react'\nimport Slider from 'react-input-slider'\n\nconst LabelSlider = ({ label, value, step, min, max, onChange, suffix='', labelValue=value }) => {\n    const divStyle = {\n        marginTop: '5px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        marginBottom: '5px'\n    }\n    return <div style={divStyle}>\n        <div>\n            {`${label}: ${labelValue}${suffix}`}\n        </div>\n        <Slider\n            axis=\"x\"\n            xstep={step}\n            xmin={min}\n            xmax={max}\n            x={value}\n            onChange={onChange()}\n        />\n    </div>\n}\n\nexport default LabelSlider","import React from 'react'\nimport LabelSlider from './LabelSlider'\n\nconst PidControls = ({ pid, changePid }) => {\n\n    const style = {\n        padding: '10px 0px'\n    }\n\n    const maxP = 1, maxI = 0.0003, maxD = 5\n    const stepP = maxP / 200.0, stepI = maxI / 200.0, stepD = maxD / 200.0\n\n    return <div style={style}>\n        <LabelSlider\n            label='P' value={pid.p} labelValue={(pid.p / maxP).toFixed(3)}\n            min={0} max={maxP} step={stepP}\n            onChange={() => ({x}) => changePid({ ...pid, p: x })}\n        />\n        <LabelSlider\n            label='I' value={pid.i} labelValue={(pid.i / maxI).toFixed(3)}\n            min={0} max={maxI} step={stepI}\n            onChange={() => ({x}) => changePid({ ...pid, i: x })}\n        />\n        <LabelSlider\n            label='D' value={pid.d} labelValue={(pid.d / maxD).toFixed(3)}\n            min={0} max={maxD} step={stepD}\n            onChange={() => ({x}) => changePid({ ...pid, d: x })}\n        />\n    </div>\n}\n\nexport default PidControls","import React from 'react'\nimport PidControls from './PidControls';\nimport Button from './Button';\n\nconst InfoColumn = ({ visible, showPid,\n    pidSelected, restartSelected,\n    pid, changePid, shower }) => {\n\n    const fullColumnStyle = {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '370px',\n        marginLeft: '5px',\n        marginRight: '5px'\n    }\n\n    if (showPid) {\n        return <div style={fullColumnStyle}>\n            {'PID controls'}\n            <PidControls\n                pid={pid}\n                changePid={changePid}\n            />\n            <Button text='Restart PID' onClick={pidSelected} />\n            <Button text='Manual Control' onClick={restartSelected} />\n        </div>\n    } else if (visible) {\n        return <div style={fullColumnStyle}>\n            <h2>{'Well done!'}</h2>\n            <p>{\"This demo explores the behaviour of shower users, when there is a noticeable delay between controlling the mixer (input) and the temperature change (output).\"}</p>\n            <p>{\"The hypothesis is that the feedback loop created by the user and the shower makes the system output first oscillate, and then stabilize at the convenient temperature range. Much like a PI controller with a slightly too high integral term would control the system.\"}</p>\n            <Button text='Restart' onClick={restartSelected} disabled={!shower.completed} />\n            <Button text='Run with PI controller' onClick={pidSelected} />\n        </div>\n    } else {\n        return <div style={fullColumnStyle}></div>\n    }\n}\n\nexport default InfoColumn","import React, { useState, useEffect, useRef } from 'react'\nimport startRender from '../simulations/RenderLoop'\nimport showerSim from '../simulations/ShowerSim'\nimport ShowerControl from './ShowerControl';\nimport Button from './Button';\nimport InfoColumn from './InfoColumn';\n\nconst ShowerMixer = props => {\n    const [shower, setShower] = useState({\n        mixer: 1,\n        running: 0,\n        completed: 0,\n        pid: 0\n    })\n    const [pid, setPid] = useState({\n        p: 0.001,\n        i: 0.00015,\n        d: 0\n    })\n\n    const canvasElement = useRef(null)\n\n    const titleAreaStyle = {\n        paddingLeft: '25px',\n        paddingRight: '25px',\n    }\n    const controlAreaStyle = {\n        paddingLeft: '25px',\n        width: '590px',\n        paddingRight: '25px',\n    }\n    const columnStyle = {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '200px',\n        marginLeft: '5px',\n        marginRight: '5px'\n    }\n    const canvasStyle = {\n        marginLeft: '5px',\n        marginRight: '5px',\n        paddingLeft: '25px',\n        paddingRight: '25px',\n        paddingTop: '10px'\n    }\n\n    const changeShower = ({ mixer }) => {\n        const newShower = {\n            ...shower,\n            mixer: mixer\n        }\n        console.log('Change shower', newShower)\n        setShower(newShower)\n        canvasElement.current.simulation.setMixer(newShower.mixer)\n    }\n\n    const changePid = (newPid) => {\n        console.log('Set pid', pid, newPid)\n        setPid(newPid)\n        canvasElement.current.simulation.setPidValues(newPid)\n    }\n\n    const startSelected = (event) => {\n        event.preventDefault()\n        console.log('Start selected')\n        canvasElement.current.simulation.setRunning(true)\n        setShower({ ...shower, running: 1 })\n    }\n\n    const restartSelected = (event) => {\n        event.preventDefault()\n        console.log('Restart selected')\n        const showerVal = canvasElement.current.simulation.reset(completionCallback(0))\n        const newShower = {\n            ...shower,\n            mixer: showerVal,\n            running: 1,\n            completed: 0,\n            pid: 0\n        }\n        setShower(newShower)\n        canvasElement.current.simulation.setUsePid(false)\n        canvasElement.current.simulation.setRunning(true)\n    }\n\n    const pidSelected = (event) => {\n        event.preventDefault()\n        console.log('PID selected')\n        const showerVal = canvasElement.current.simulation.reset(completionCallback(1))\n        const newShower = {\n            ...shower,\n            mixer: showerVal,\n            running: 1,\n            completed: 0,\n            pid: 1\n        }\n        setShower(newShower)\n        canvasElement.current.simulation.setPidValues(pid)\n        canvasElement.current.simulation.setUsePid(true)\n        canvasElement.current.simulation.setRunning(true)\n    }\n\n    const completionCallback = (usePid) => (mixerValue) => {\n        console.log('COMPLETION CALLBACK', shower, usePid)\n        canvasElement.current.simulation.setRunning(false)\n        const newShower = {\n            ...shower,\n            mixer: mixerValue,\n            running: 0,\n            completed: 1,\n            pid: usePid\n        }\n        setShower(newShower)\n    }\n\n    const startHook = () => {\n        console.log('start hook')\n        console.log(props.location.search)\n\n        startRender(canvasElement.current, showerSim())\n        const showerVal = canvasElement.current.simulation.reset(completionCallback(shower.pid))\n        canvasElement.current.simulation.setPidValues(pid)\n        canvasElement.current.simulation.setUsePid(shower.pid)\n        canvasElement.current.simulation.setRunning(shower.running)\n        setShower({ ...shower, mixer: showerVal })\n    }\n\n    useEffect(startHook, [])\n\n    return <div>\n        <div style={titleAreaStyle}>\n            <h1>{'Have a Nice Shower!'}</h1>\n            <p>{\"You are entering a shower. But it's way too cold! Use the shower mixer controls to set the temperature to a reasonable setting.\"}</p>\n            <p>{\"You can follow the current temperature from the graph below. The convenient zone is marked with the green lines, so aim to get the temperature between them.\"}</p>\n            <Button text='Start' onClick={startSelected} disabled={shower.running || shower.completed} />\n        </div>\n        <canvas style={canvasStyle} ref={canvasElement} width='590' height='400' />\n        <div style={controlAreaStyle}>\n            <div style={columnStyle}>\n                <div>\n                    {'Shower Mixer Control'}\n                </div>\n                <ShowerControl\n                    value={shower.mixer}\n                    min={0} max={1} step={0.0025}\n                    onChange={() => ({ y }) => { if (shower.running && !shower.pid) changeShower({ ...shower, mixer: y }) }}\n                />\n            </div>\n            <InfoColumn visible={shower.completed} showPid={shower.pid}\n                pidSelected={pidSelected} restartSelected={restartSelected}\n                pid={pid} changePid={changePid} shower={shower} />\n        </div>\n    </div>\n}\n\nexport default ShowerMixer","import React, { useEffect } from 'react'\nimport Footer from './components/Footer'\nimport ShowerMixer from './components/ShowerMixer';\n\nconst App = props => {\n  const divStyle = {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: '600px'\n  }\n\n  useEffect(() => {\n    console.log('app effect')\n  })\n\n  return (\n    <div style={divStyle}>\n        <ShowerMixer location={window.location} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}